apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "nginx.fullname" . }}
  labels:
    app: {{ template "nginx.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  selector:
    matchLabels:
      app: {{ template "nginx.fullname" . }}
      release: "{{ .Release.Name }}"
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "nginx.fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
{{- if or .Values.nginx.podAnnotations .Values.nginx.metrics.enabled }}
      annotations:
  {{- if .Values.nginx.podAnnotations }}
{{ toYaml .Values.nginx.podAnnotations | indent 8 }}
  {{- end }}
  {{- if .Values.nginx.metrics.podAnnotations }}
{{ toYaml .Values.nginx.metrics.podAnnotations | indent 8 }}
  {{- end }}
{{- end }}
    spec:
      containers:
      - name: nginx
        image: "{{ template "nginx.image" . }}"
        imagePullPolicy: {{ .Values.nginx.image.pullPolicy | quote }}
        ports:
        - name: http
          containerPort: 7076
        livenessProbe: {{ toYaml .Values.nginx.livenessProbe | nindent 10 }}
        readinessProbe: {{ toYaml .Values.nginx.readinessProbe | nindent 10 }}
        volumeMounts:
        - name: nginx-block
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: nginx-server-block
          mountPath: /etc/nginx/conf.d/influxdb.conf
          subPath: influxdb.conf
        resources:
{{ toYaml .Values.nginx.resources | indent 12 }}
      initContainers:
      - name: check-influxdb-relay
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command: ['sh', '-c', 'curl -sl -I {{ template "influxdb-relay.fullname" . }}.{{ .Release.Namespace }}.{{ .Values.service.default_dns_suffix }}:{{ .Values.relay_port }}/health']
     
{{- if .Values.nginx.metrics.enabled }}
      - name: metrics
        image: {{ template "nginx.metrics.image" . }}
        imagePullPolicy: {{ .Values.nginx.metrics.image.pullPolicy | quote }}
        command: [ '/usr/bin/exporter', '-nginx.scrape-uri', 'http://127.0.0.1:8080/status']
        ports:
        - name: metrics
          containerPort: 9113
        livenessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 15
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
{{ toYaml .Values.nginx.metrics.resources | indent 12 }}
{{- end }}
      volumes:
      - name: nginx-block
        configMap:
          name: {{ template "nginx.fullname" . }}-conf
      - name: nginx-server-block
        configMap:
          name: {{ template "nginx.fullname" . }}-server

